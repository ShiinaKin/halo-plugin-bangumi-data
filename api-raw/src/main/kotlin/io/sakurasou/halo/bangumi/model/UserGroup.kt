/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.sakurasou.halo.bangumi.model


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 用户组 - 1 = 管理员 - 2 = Bangumi 管理猿 - 3 = 天窗管理猿 - 4 = 禁言用户 - 5 = 禁止访问用户 - 8 = 人物管理猿 - 9 = 维基条目管理猿 - 10 = 用户 - 11 = 维基人
 *
 * Values: Admin,BangumiAdmin,DoujinAdmin,MutedUser,BlockedUser,PersonAdmin,WikiAdmin,User,WikiUser
 */

@JsonClass(generateAdapter = false)
enum class UserGroup(val value: kotlin.Int) {

    @Json(name = 1)
    Admin(1),

    @Json(name = 2)
    BangumiAdmin(2),

    @Json(name = 3)
    DoujinAdmin(3),

    @Json(name = 4)
    MutedUser(4),

    @Json(name = 5)
    BlockedUser(5),

    @Json(name = 8)
    PersonAdmin(8),

    @Json(name = 9)
    WikiAdmin(9),

    @Json(name = 10)
    User(10),

    @Json(name = 11)
    WikiUser(11);

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value.toString()

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is UserGroup) "$data" else null

        /**
         * Returns a valid [UserGroup] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): UserGroup? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

