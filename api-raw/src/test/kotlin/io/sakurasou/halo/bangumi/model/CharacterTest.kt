/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.sakurasou.halo.bangumi.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import io.sakurasou.halo.bangumi.model.Character
import io.sakurasou.halo.bangumi.model.BloodType
import io.sakurasou.halo.bangumi.model.CharacterType
import io.sakurasou.halo.bangumi.model.PersonImages
import io.sakurasou.halo.bangumi.model.Stat

class CharacterTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Character
        //val modelInstance = Character()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `type` - 角色，机体，舰船，组织...
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `summary`
        should("test summary") {
            // uncomment below to test the property
            //modelInstance.summary shouldBe ("TODO")
        }

        // to test the property `locked`
        should("test locked") {
            // uncomment below to test the property
            //modelInstance.locked shouldBe ("TODO")
        }

        // to test the property `stat`
        should("test stat") {
            // uncomment below to test the property
            //modelInstance.stat shouldBe ("TODO")
        }

        // to test the property `images` - object with some size of images, this object maybe `null`
        should("test images") {
            // uncomment below to test the property
            //modelInstance.images shouldBe ("TODO")
        }

        // to test the property `infobox` - server parsed infobox, a map from key to string or tuple null if server infobox is not valid
        should("test infobox") {
            // uncomment below to test the property
            //modelInstance.infobox shouldBe ("TODO")
        }

        // to test the property `gender` - parsed from wiki, maybe null
        should("test gender") {
            // uncomment below to test the property
            //modelInstance.gender shouldBe ("TODO")
        }

        // to test the property `bloodType` - parsed from wiki, maybe null, `1, 2, 3, 4` for `A, B, AB, O`
        should("test bloodType") {
            // uncomment below to test the property
            //modelInstance.bloodType shouldBe ("TODO")
        }

        // to test the property `birthYear` - parsed from wiki, maybe `null`
        should("test birthYear") {
            // uncomment below to test the property
            //modelInstance.birthYear shouldBe ("TODO")
        }

        // to test the property `birthMon` - parsed from wiki, maybe `null`
        should("test birthMon") {
            // uncomment below to test the property
            //modelInstance.birthMon shouldBe ("TODO")
        }

        // to test the property `birthDay` - parsed from wiki, maybe `null`
        should("test birthDay") {
            // uncomment below to test the property
            //modelInstance.birthDay shouldBe ("TODO")
        }

    }
}
