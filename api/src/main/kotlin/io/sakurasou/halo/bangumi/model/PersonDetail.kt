/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.sakurasou.halo.bangumi.model

import io.sakurasou.halo.bangumi.model.BloodType
import io.sakurasou.halo.bangumi.model.PersonCareer
import io.sakurasou.halo.bangumi.model.PersonImages
import io.sakurasou.halo.bangumi.model.PersonType
import io.sakurasou.halo.bangumi.model.Stat

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param name 
 * @param type `1`, `2`, `3` 表示 `个人`, `公司`, `组合`
 * @param career 
 * @param summary 
 * @param locked 
 * @param lastModified currently it's latest user comment time, it will be replaced by wiki modified date in the future
 * @param stat 
 * @param images object with some size of images, this object maybe `null`
 * @param infobox server parsed infobox, a map from key to string or tuple null if server infobox is not valid
 * @param gender parsed from wiki, maybe null
 * @param bloodType parsed from wiki, maybe null, `1, 2, 3, 4` for `A, B, AB, O`
 * @param birthYear parsed from wiki, maybe `null`
 * @param birthMon parsed from wiki, maybe `null`
 * @param birthDay parsed from wiki, maybe `null`
 */


data class PersonDetail (

    @Json(name = "id")
    val id: kotlin.Int,

    @Json(name = "name")
    val name: kotlin.String,

    /* `1`, `2`, `3` 表示 `个人`, `公司`, `组合` */
    @Json(name = "type")
    val type: PersonType,

    @Json(name = "career")
    val career: kotlin.collections.List<PersonCareer>,

    @Json(name = "summary")
    val summary: kotlin.String,

    @Json(name = "locked")
    val locked: kotlin.Boolean,

    /* currently it's latest user comment time, it will be replaced by wiki modified date in the future */
    @Json(name = "last_modified")
    val lastModified: java.time.OffsetDateTime,

    @Json(name = "stat")
    val stat: Stat,

    /* object with some size of images, this object maybe `null` */
    @Json(name = "images")
    val images: PersonImages? = null,

    /* server parsed infobox, a map from key to string or tuple null if server infobox is not valid */
    @Json(name = "infobox")
    val infobox: kotlin.collections.List<kotlin.Any>? = null,

    /* parsed from wiki, maybe null */
    @Json(name = "gender")
    val gender: kotlin.String? = null,

    /* parsed from wiki, maybe null, `1, 2, 3, 4` for `A, B, AB, O` */
    @Json(name = "blood_type")
    val bloodType: BloodType? = null,

    /* parsed from wiki, maybe `null` */
    @Json(name = "birth_year")
    val birthYear: kotlin.Int? = null,

    /* parsed from wiki, maybe `null` */
    @Json(name = "birth_mon")
    val birthMon: kotlin.Int? = null,

    /* parsed from wiki, maybe `null` */
    @Json(name = "birth_day")
    val birthDay: kotlin.Int? = null

) {


}

